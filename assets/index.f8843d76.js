const d=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function r(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerpolicy&&(o.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?o.credentials="include":t.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(t){if(t.ep)return;t.ep=!0;const o=r(t);fetch(t.href,o)}};d();const s="this-is-a-message";function l(n){if(!(typeof n=="object"&&n!==null&&"type"in n&&"value"in n&&n.signature===s))throw new TypeError(`data is not an ExampleMessage (got ${n})`);const e=n.type;switch(e){case"Layer":case"MainImageData":case"ParseData":return;default:(r=>{throw new TypeError(`Unexpected ExampleMessage type: ${r}`)})(e)}}function c(n,e){return{type:n,value:e,signature:s,timestamp:Date.now()}}const p=n=>{const e=document.createElement("canvas"),r=e.getContext("2d"),{width:i,height:t,pixelData:o}=n,a=r.createImageData(i,t);return e.width=i,e.height=t,a.data.set(o),r.putImageData(a,0,0),e},g=n=>{if(n.arrayBuffer)return n.arrayBuffer();{const e=new FileReader;return e.readAsArrayBuffer(n),new Promise(r=>{e.addEventListener("load",i=>{if(i.target)r(i.target.result);else throw new Error("Loaded file but event.target is null")})})}},f=({data:n},e)=>{const{type:r,timestamp:i,value:t}=n;if(l(n),console.log("It took %d ms to send this message (worker \u2192 main, type: %o)",Date.now()-i,r),r==="Layer"){const o=t;e.insertAdjacentHTML("beforeend",`<h3>${o.name}</h3>`),e.insertAdjacentHTML("beforeend",`<div><p class="layer-info">size : ${o.width} x ${o.height} | top: ${o.top} | left: ${o.left}</p></div>`),console.time("Create and append <canvas> for layer"),e.appendChild(p(o)),console.timeEnd("Create and append <canvas> for layer")}};document.addEventListener("DOMContentLoaded",()=>{console.log("Script loaded");const n=document.querySelector("#results"),e=document.querySelector('input[type="file"]'),r=new Worker("./assets/worker.a4c13d60.js",{type:"module"});r.addEventListener("message",i=>f(i,n)),e.addEventListener("change",()=>{const i=e.files[0];!i||(g(i).then(t=>{r.postMessage(c("ParseData",t),[t])}),e.value="",n.innerHTML="")})});
